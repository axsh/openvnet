#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'rubygems'
require 'bundler/setup'
require 'vnet/api_direct'
require 'dcell'
require 'ext/celluloid'

# Vnet::Initializers::Logger.run("vnmgr.log")

conf = Vnet::Configurations::Vnmgr.conf

# TODO: Move to after celluloid/dcell is started?
Vnet::Initializers::DB.run(conf.db_uri)

params = {
  :id => conf.node.id,
  :addr => conf.node.addr_string,
  :registry => {
    :adapter => conf.registry.adapter,
    :host => conf.registry.host,
    :port => conf.registry.port
  }
}

params.merge!(:public => conf.node.pub_addr_string) if conf.node.addr.public != ""

DCell.start(params)
Celluloid.start

Vnet::NodeModules::ServiceWatchdog.supervise_as :service_watchdog
Vnet::NodeModules::Rpc.supervise_as :rpc
Vnet::NodeModules::EventHandler.supervise_as :event_handler
Vnet::Services::Vnmgr.supervise_as :vnmgr

DCell::Global[:rpc] = Celluloid::Actor[:rpc]
DCell::Global[:event_handler] = Celluloid::Actor[:event_handler]

dp_mg_uuid = conf.datapath_mac_group
if dp_mg_uuid.nil?
  Celluloid.logger.warn "datapath_mac_group is not set in /etc/openvnet/common.conf. " +
                        "OpenVNet will not be able to auto-assign MAC addresses."
elsif Vnet::Models::MacRangeGroup[dp_mg_uuid].nil?
  Celluloid.logger.warn "The datapath_mac_group UUID set in /etc/openvnet/common.conf " +
                        "was not found in the database. " +
                        "OpenVNet will not be able to auto-assign MAC addresses."
end

Celluloid::Actor[:service_watchdog].start_watchdog
Celluloid::Actor[:vnmgr].start_services

sleep
