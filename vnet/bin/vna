#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'rubygems'
require 'bundler/setup'
require 'vnet/api_rpc'
require 'dcell'
require 'ext/celluloid'

#Vnet::Initializers::Logger.run("vna.log")

conf = Vnet::Configurations::Vna.conf

# Start the switch manager before any celluloid services in order to
# avoid cloned file descriptors to e.g. zmq remaining open.
switch_manager_new = Vnet::NodeModules::SwitchManager.new
switch_manager_new.configure_trema
switch_manager_new.cleanup_current_session
switch_manager_new.kill_old_switches
switch_manager_new.start

Vnet::NodeApi.raise_on_error = false # dont raise any errors

params = {
  :id => conf.node.id,
  :addr => conf.node.addr_string,
  :registry => {
    :adapter => conf.registry.adapter,
    :host => conf.registry.host,
    :port => conf.registry.port
  }
}

params.merge!(:public => conf.node.pub_addr_string) if conf.node.addr.public != ""

DCell.start(params)
Celluloid.start

trap 'TTIN' do
  Celluloid.stack_dump
end

Vnet::NodeModules::ServiceWatchdog.supervise_as :service_watchdog
Vnet::NodeModules::ServiceOpenflow.supervise_as :service_openflow

Celluloid::Actor[:service_watchdog].start_watchdog
Celluloid::Actor[:service_openflow].start_openflow

sleep
