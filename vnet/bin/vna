#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'rubygems'
require 'bundler/setup'
require 'vnet'
require 'celluloid'
require 'dcell'

conf = Vnet::Configurations::Vna.conf

#Celluloid.logger = ::Logger.new(File.join(Vnet::LOG_DIR, "#{conf.node.id}.log"))
Celluloid.logger = ::Logger.new(File.join(Vnet::LOG_DIR, "vna.log"))

Vnet::ModelWrappers::Base.set_proxy(conf.node_api_proxy)

case conf.node_api_proxy
when :rpc
  # do nothing
when :direct
  Vnet::Initializers::DB.run(conf.db_uri)
end

DCell.start(:id => conf.node.id, :addr => conf.node.addr_string,
  :registry => {
    :adapter => conf.registry.adapter,
    :host => conf.registry.host,
    :port => conf.registry.port
})

# Poke the database.
Vnet::ModelWrappers::Network.batch.name.commit

name = "#{conf.node.id}-#{conf.node.addr.host}"
service_openflow = Vnet::NodeModules::ServiceOpenflow.supervise_as name.to_sym

sleep
