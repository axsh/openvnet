# -*- coding: utf-8 -*-
require 'spec_helper'

describe Vnet::NodeModules::EventHandler do

  let(:datapath_1) { Fabricate(:datapath_1) }
  let(:datapath_2) { Fabricate(:datapath_2) }
  let(:datapath_3) { Fabricate(:datapath_3) }

  before(:each) do
    Vnet::Models::DatapathNetwork.create(:datapath_id => datapath_1.id, :network_id => 1)
    Vnet::Models::DatapathNetwork.create(:datapath_id => datapath_2.id, :network_id => 2)
    Vnet::Models::DatapathNetwork.create(:datapath_id => datapath_3.id, :network_id => 1)
  end

  describe "handle_event" do
    it "handle correctly" do
      Vnet::NodeModules::EventHandler.new.handle_event("network/vif_added", {vif_id: 1, network_id: 2})
      #actor = double(:actor)
      #DCell::Node.stub("[]").with("vna2").and_return(actor)
      #expect(actor).to receive(:vif_added).with(2, 1)
    end
  end
end
