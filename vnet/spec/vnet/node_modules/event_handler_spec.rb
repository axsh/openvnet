# -*- coding: utf-8 -*-
require 'spec_helper'

describe Vnet::NodeModules::EventHandler do

  let!(:datapath_1) { Fabricate(:datapath_1) }

  before(:each) do
  end

  describe "handle_event" do
    it "handle correctly" do
      options = {:bbb => 1, :ccc => 2}
      node = double(:node)
      actor = double(:actor)

      allow(DCell::Node).to receive(:[]).with("vna").and_return(node)

      expect(node).to receive(:[]).with(:service_openflow).exactly(2).times.and_return(actor)
      expect(node).to receive(:state).and_return(:connected)
      expect(actor).to receive(:dispatch_publish).with(:aaa, options)

      Vnet::NodeModules::EventHandler.new.handle_event(:aaa, options)
    end
  end
end
