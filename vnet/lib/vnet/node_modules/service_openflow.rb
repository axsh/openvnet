# -*- coding: utf-8 -*-

module Vnet
  module NodeModules

    class ServiceOpenflow
      include Celluloid
      include Celluloid::Logger
      include Vnet::Event::Dispatchable

      def set_controller(controller)
        @controller = controller
      end

      def terminate
        info "service_openflow: terminating"

        return if @controller.nil?

        @controller.pass_task {
          begin
            @controller.shutdown!
            @controller.close_trema_tasks
          rescue Exception => e
            p e.inspect
            e.backtrace.each { |str| p str }
          end
        }

        sleep(2)
        super
      end

      def dispatch_publish(event, options)
        Celluloid::Notifications.notifier.publish(event, options)
        nil
      end

    end

  end
end
